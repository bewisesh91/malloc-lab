# Malloc 구현노트 #
## Malloc 관련 주요 개념 ## 
### 동적 메모리 할당 ###

- 동적 메모리 할당이란 힙(Heap) 프로세스의 가상 메모리 영역을 이용하여 프로그램을 실행하는 중간에 메모리를 할당 받는 것을 의미한다.

- 동적 메모리 할당기의 유형


	- **명시적 할당기 Explicit Allocator**
		
		> Application이 **직접 메모리를 할당하고 또 반환한다.**
		
			C 표준 라이브러리의 **malloc 패키지(malloc()과 free())**
		
	- **묵시적 할당기 Implicit Allocator**
		
		> Application이 메모리를 할당하지만 **반환은 할당기가 자동으로 처리한다.**
		
			Garbage Collector라고도 부르며, 자바 같은 상위수준 언어들은 자동으로 사용하지 않은 Allocated block들을 반환하는 방식을 사용하는데, 이를 garbage collection이라고 한다.


- 메모리 단편화
	- 가용 메모리가 할당 요청을 만족시키지 못했을 때 나타나는, 나쁜 힙 이용도의 원인이 되는 현상.
		- **내부 단편화 Internal Fragmentation**
			> 내부 단편화는 **할당된 블록이 데이터 자체보다 클 때** 발생한다.
	    
		- **외부 단편화 External Fragmentation**
    		> 힙 전체로 봤을 때는 할당 요청을 만족할 만한 메모리 공간이 있지만, **각각의 가용 블록들이 이 요청을 처리할 만큼 크지 않을 때** 발생한다.



#####################################################################
# CS:APP Malloc Lab
# Handout files for students
#
# Copyright (c) 2002, R. Bryant and D. O'Hallaron, All rights reserved.
# May not be used, modified, or copied without permission.
#
######################################################################

***********
Main Files:
***********

mm.{c,h}	
	Your solution malloc package. mm.c is the file that you
	will be handing in, and is the only file you should modify.

mdriver.c	
	The malloc driver that tests your mm.c file

short{1,2}-bal.rep
	Two tiny tracefiles to help you get started. 

Makefile	
	Builds the driver

**********************************
Other support files for the driver
**********************************

config.h	Configures the malloc lab driver
fsecs.{c,h}	Wrapper function for the different timer packages
clock.{c,h}	Routines for accessing the Pentium and Alpha cycle counters
fcyc.{c,h}	Timer functions based on cycle counters
ftimer.{c,h}	Timer functions based on interval timers and gettimeofday()
memlib.{c,h}	Models the heap and sbrk function

*******************************
Building and running the driver
*******************************
To build the driver, type "make" to the shell.

To run the driver on a tiny test trace:

	unix> mdriver -V -f short1-bal.rep

The -V option prints out helpful tracing and summary information.

To get a list of the driver flags:

	unix> mdriver -h


